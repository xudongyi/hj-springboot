package business.message;

import business.util.CommonsUtil;
import business.util.DataFormat;

import java.util.ArrayList;
import java.util.List;

public class AirMessage implements BaseMessage {
    private List<Double> airCurrentList = new ArrayList();
    private List<Double> smokeCurrentList = new ArrayList();
    private List<Double> so2CurrentList = new ArrayList();
    private List<Double> noxCurrentList = new ArrayList();
    private List<Double> coCurrentList = new ArrayList();
    private List<Double> airMinCouList = new ArrayList();
    private List<Double> smokeMinCouList = new ArrayList();
    private List<Double> so2MinCouList = new ArrayList();
    private List<Double> noxMinCouList = new ArrayList();
    private List<Double> coMinCouList = new ArrayList();
    private List<Double> airMinAvgList = new ArrayList();
    private List<Double> smokeMinAvgList = new ArrayList();
    private List<Double> so2MinAvgList = new ArrayList();
    private List<Double> noxMinAvgList = new ArrayList();
    private List<Double> coMinAvgList = new ArrayList();
    private List<Double> airMinMaxList = new ArrayList();
    private List<Double> smokeMinMaxList = new ArrayList();
    private List<Double> so2MinMaxList = new ArrayList();
    private List<Double> noxMinMaxList = new ArrayList();
    private List<Double> coMinMaxList = new ArrayList();
    private List<Double> airMinMinList = new ArrayList();
    private List<Double> smokeMinMinList = new ArrayList();
    private List<Double> so2MinMinList = new ArrayList();
    private List<Double> noxMinMinList = new ArrayList();
    private List<Double> coMinMinList = new ArrayList();
    private List<Double> airHourCouList = new ArrayList();
    private List<Double> smokeHourCouList = new ArrayList();
    private List<Double> so2HourCouList = new ArrayList();
    private List<Double> noxHourCouList = new ArrayList();
    private List<Double> coHourCouList = new ArrayList();
    private List<Double> airHourAvgList = new ArrayList();
    private List<Double> smokeHourAvgList = new ArrayList();
    private List<Double> so2HourAvgList = new ArrayList();
    private List<Double> noxHourAvgList = new ArrayList();
    private List<Double> coHourAvgList = new ArrayList();
    private List<Double> airHourMaxList = new ArrayList();
    private List<Double> smokeHourMaxList = new ArrayList();
    private List<Double> so2HourMaxList = new ArrayList();
    private List<Double> noxHourMaxList = new ArrayList();
    private List<Double> coHourMaxList = new ArrayList();
    private List<Double> airHourMinList = new ArrayList();
    private List<Double> smokeHourMinList = new ArrayList();
    private List<Double> so2HourMinList = new ArrayList();
    private List<Double> noxHourMinList = new ArrayList();
    private List<Double> coHourMinList = new ArrayList();

    public AirMessage() {
    }

    public String current() {
        double air = DataFormat.randomData(0, 50, 1);
        double smoke = DataFormat.randomData(5, 30, 0);
        double so2 = DataFormat.randomData(0, 10, 2);
        double nox = DataFormat.randomData(0, 100, 1);
        double co = DataFormat.randomDouble(0, 100, 3);
        this.airCurrentList.add(air);
        this.smokeCurrentList.add(smoke);
        this.so2CurrentList.add(so2);
        this.noxCurrentList.add(nox);
        this.coCurrentList.add(co);
        StringBuffer cmd = new StringBuffer("");
        cmd.append("QN=${QN};ST=31;CN=2011;PW=123456;MN=${MN};CP=&&DataTime=${DataTime};");
        cmd.append("B02-Rtd=" + air + ",B02-ZsRtd=" + this.getZs(air) + ",B02-Flag=N;");
        cmd.append("01-Rtd=" + smoke + ",01-ZsRtd=" + this.getZs(smoke) + ",01-Flag=N;");
        cmd.append("02-Rtd=" + so2 + ",02-ZsRtd=" + this.getZs(so2) + ",02-Flag=N,02-EFlag=" + DataFormat.randomDeviceState() + ";");
        cmd.append("03-Rtd=" + nox + ",03-ZsRtd=" + this.getZs(nox) + ",03-Flag=" + DataFormat.randomFlag() + ",03-EFlag=" + DataFormat.randomDeviceState() + ";");
        cmd.append("04-Rtd=" + co + ",04-ZsRtd=" + this.getZs(co) + ",04-Flag=" + DataFormat.randomFlag());
        cmd.append("&&");
        return cmd.toString();
    }

    public String minute() {
        double airCou = CommonsUtil.numberFormat(DataFormat.cou(this.airCurrentList, 3) * 60.0D, 3);
        double airMax = DataFormat.max(this.airCurrentList);
        double airMin = DataFormat.min(this.airCurrentList);
        double airAvg = DataFormat.avg(this.airCurrentList, 3);
        this.airMinCouList.add(airCou);
        this.airMinMaxList.add(airMax);
        this.airMinMinList.add(airMin);
        this.airMinAvgList.add(airAvg);
        this.airCurrentList.clear();
        double smokeCou = CommonsUtil.numberFormat(DataFormat.cou(this.smokeCurrentList, 3) * airCou / 1000.0D / 1000.0D, 3);
        double smokeMax = DataFormat.max(this.smokeCurrentList);
        double smokeMin = DataFormat.min(this.smokeCurrentList);
        double smokeAvg = DataFormat.avg(this.smokeCurrentList, 3);
        this.smokeMinCouList.add(smokeCou);
        this.smokeMinMaxList.add(smokeMax);
        this.smokeMinMinList.add(smokeMin);
        this.smokeMinAvgList.add(smokeAvg);
        this.smokeCurrentList.clear();
        double so2Cou = CommonsUtil.numberFormat(DataFormat.cou(this.so2CurrentList, 3) * airCou / 1000.0D / 1000.0D, 3);
        double so2Max = DataFormat.max(this.so2CurrentList);
        double so2Min = DataFormat.min(this.so2CurrentList);
        double so2Avg = DataFormat.avg(this.so2CurrentList, 3);
        this.so2MinCouList.add(so2Cou);
        this.so2MinMaxList.add(so2Max);
        this.so2MinMinList.add(so2Min);
        this.so2MinAvgList.add(so2Avg);
        this.so2CurrentList.clear();
        double noxCou = CommonsUtil.numberFormat(DataFormat.cou(this.noxCurrentList, 3) * airCou / 1000.0D / 1000.0D, 3);
        double noxMax = DataFormat.max(this.noxCurrentList);
        double noxMin = DataFormat.min(this.noxCurrentList);
        double noxAvg = DataFormat.avg(this.noxCurrentList, 3);
        this.noxMinCouList.add(noxCou);
        this.noxMinMaxList.add(noxMax);
        this.noxMinMinList.add(noxMin);
        this.noxMinAvgList.add(noxAvg);
        this.noxCurrentList.clear();
        double coCou = CommonsUtil.numberFormat(DataFormat.cou(this.coCurrentList, 3) * airCou / 1000.0D / 1000.0D, 3);
        double coMax = DataFormat.max(this.coCurrentList);
        double coMin = DataFormat.min(this.coCurrentList);
        double coAvg = DataFormat.avg(this.coCurrentList, 3);
        this.coMinCouList.add(coCou);
        this.coMinMaxList.add(coMax);
        this.coMinMinList.add(coMin);
        this.coMinAvgList.add(coAvg);
        this.coCurrentList.clear();
        StringBuffer cmd = new StringBuffer("");
        cmd.append("QN=${QN};ST=31;CN=2051;PW=123456;MN=${MN};CP=&&DataTime=${DataTime};");
        cmd.append("B02-Cou=" + airCou + ",B02-Min=" + airMin + ",B02-Max=" + airMax + ",B02-Avg=" + airAvg + ",B02-Flag=N,");
        cmd.append("B02-ZsCou=" + this.getZs(airCou) + ",B02-ZsMin=" + this.getZs(airMin) + ",B02-ZsMax=" + this.getZs(airMax) + ",B02-ZsAvg=" + this.getZs(airAvg) + ";");
        cmd.append("01-Cou=" + smokeCou + ",01-Min=" + smokeMin + ",01-Max=" + smokeMax + ",01-Avg=" + smokeAvg + ",01-Flag=N,");
        cmd.append("01-ZsCou=" + this.getZs(smokeCou) + ",01-ZsMin=" + this.getZs(smokeMin) + ",01-ZsMax=" + this.getZs(smokeMax) + ",01-ZsAvg=" + this.getZs(smokeAvg) + ";");
        cmd.append("02-Cou=" + so2Cou + ",02-Min=" + so2Min + ",02-Max=" + so2Max + ",02-Avg=" + so2Avg + ",02-Flag=N,");
        cmd.append("02-ZsCou=" + this.getZs(so2Cou) + ",02-ZsMin=" + this.getZs(so2Min) + ",02-ZsMax=" + this.getZs(so2Max) + ",02-ZsAvg=" + this.getZs(so2Avg) + ";");
        cmd.append("03-Cou=" + noxCou + ",03-Min=" + noxMin + ",03-Max=" + noxMax + ",03-Avg=" + noxAvg + ",03-Flag=N,");
        cmd.append("03-ZsCou=" + this.getZs(noxCou) + ",03-ZsMin=" + this.getZs(noxMin) + ",03-ZsMax=" + this.getZs(noxMax) + ",03-ZsAvg=" + this.getZs(noxAvg) + ";");
        cmd.append("04-Cou=" + coCou + ",04-Min=" + coMin + ",04-Max=" + coMax + ",04-Avg=" + coAvg + ",04-Flag=N,");
        cmd.append("04-ZsCou=" + this.getZs(coCou) + ",04-ZsMin=" + this.getZs(coMin) + ",04-ZsMax=" + this.getZs(coMax) + ",04-ZsAvg=" + this.getZs(coAvg));
        cmd.append("&&");
        return cmd.toString();
    }

    public String hour() {
        double airCou = DataFormat.cou(this.airMinCouList, 3);
        double airMax = DataFormat.max(this.airMinMaxList);
        double airMin = DataFormat.min(this.airMinMinList);
        double airAvg = DataFormat.avg(this.airMinAvgList, 3);
        this.airHourCouList.add(airCou);
        this.airHourMaxList.add(airMax);
        this.airHourMinList.add(airMin);
        this.airHourAvgList.add(airAvg);
        this.airMinCouList.clear();
        this.airMinMaxList.clear();
        this.airMinMinList.clear();
        this.airMinAvgList.clear();
        double smokeCou = DataFormat.cou(this.smokeMinCouList, 3);
        double smokeMax = DataFormat.max(this.smokeMinMaxList);
        double smokeMin = DataFormat.min(this.smokeMinMinList);
        double smokeAvg = DataFormat.avg(this.smokeMinAvgList, 3);
        this.smokeHourCouList.add(smokeCou);
        this.smokeHourMaxList.add(smokeMax);
        this.smokeHourMinList.add(smokeMin);
        this.smokeHourAvgList.add(smokeAvg);
        this.smokeMinCouList.clear();
        this.smokeMinMaxList.clear();
        this.smokeMinMinList.clear();
        this.smokeMinAvgList.clear();
        double so2Cou = DataFormat.cou(this.so2MinCouList, 3);
        double so2Max = DataFormat.max(this.so2MinMaxList);
        double so2Min = DataFormat.min(this.so2MinMinList);
        double so2Avg = DataFormat.avg(this.so2MinAvgList, 3);
        this.so2HourCouList.add(so2Cou);
        this.so2HourMaxList.add(so2Max);
        this.so2HourMinList.add(so2Min);
        this.so2HourAvgList.add(so2Avg);
        this.so2MinCouList.clear();
        this.so2MinMaxList.clear();
        this.so2MinMinList.clear();
        this.so2MinAvgList.clear();
        double noxCou = DataFormat.cou(this.noxMinCouList, 3);
        double noxMax = DataFormat.max(this.noxMinMaxList);
        double noxMin = DataFormat.min(this.noxMinMinList);
        double noxAvg = DataFormat.avg(this.noxMinAvgList, 3);
        this.noxHourCouList.add(noxCou);
        this.noxHourMaxList.add(noxMax);
        this.noxHourMinList.add(noxMin);
        this.noxHourAvgList.add(noxAvg);
        this.noxMinCouList.clear();
        this.noxMinMaxList.clear();
        this.noxMinMinList.clear();
        this.noxMinAvgList.clear();
        double coCou = DataFormat.cou(this.coMinCouList, 3);
        double coMax = DataFormat.max(this.coMinMaxList);
        double coMin = DataFormat.min(this.coMinMinList);
        double coAvg = DataFormat.avg(this.coMinAvgList, 3);
        this.coHourCouList.add(coCou);
        this.coHourMaxList.add(coMax);
        this.coHourMinList.add(coMin);
        this.coHourAvgList.add(coAvg);
        this.coMinCouList.clear();
        this.coMinMaxList.clear();
        this.coMinMinList.clear();
        this.coMinAvgList.clear();
        StringBuffer cmd = new StringBuffer("");
        cmd.append("QN=${QN};ST=31;CN=2061;PW=123456;MN=${MN};CP=&&DataTime=${DataTime};");
        cmd.append("B02-Cou=" + airCou + ",B02-Min=" + airMin + ",B02-Max=" + airMax + ",B02-Avg=" + airAvg + ",B02-Flag=N,");
        cmd.append("B02-ZsCou=" + this.getZs(airCou) + ",B02-ZsMin=" + this.getZs(airMin) + ",B02-ZsMax=" + this.getZs(airMax) + ",B02-ZsAvg=" + this.getZs(airAvg) + ";");
        cmd.append("01-Cou=" + smokeCou + ",01-Min=" + smokeMin + ",01-Max=" + smokeMax + ",01-Avg=" + smokeAvg + ",01-Flag=N,");
        cmd.append("01-ZsCou=" + this.getZs(smokeCou) + ",01-ZsMin=" + this.getZs(smokeMin) + ",01-ZsMax=" + this.getZs(smokeMax) + ",01-ZsAvg=" + this.getZs(smokeAvg) + ";");
        cmd.append("02-Cou=" + so2Cou + ",02-Min=" + so2Min + ",02-Max=" + so2Max + ",02-Avg=" + so2Avg + ",02-Flag=N,");
        cmd.append("02-ZsCou=" + this.getZs(so2Cou) + ",02-ZsMin=" + this.getZs(so2Min) + ",02-ZsMax=" + this.getZs(so2Max) + ",02-ZsAvg=" + this.getZs(so2Avg) + ";");
        cmd.append("03-Cou=" + noxCou + ",03-Min=" + noxMin + ",03-Max=" + noxMax + ",03-Avg=" + noxAvg + ",03-Flag=N,");
        cmd.append("03-ZsCou=" + this.getZs(noxCou) + ",03-ZsMin=" + this.getZs(noxMin) + ",03-ZsMax=" + this.getZs(noxMax) + ",03-ZsAvg=" + this.getZs(noxAvg) + ";");
        cmd.append("04-Cou=" + coCou + ",04-Min=" + coMin + ",04-Max=" + coMax + ",04-Avg=" + coAvg + ",04-Flag=N,");
        cmd.append("04-ZsCou=" + this.getZs(coCou) + ",04-ZsMin=" + this.getZs(coMin) + ",04-ZsMax=" + this.getZs(coMax) + ",04-ZsAvg=" + this.getZs(coAvg));
        cmd.append("&&");
        return cmd.toString();
    }

    public String day() {
        double airCou = DataFormat.cou(this.airHourCouList, 3);
        double airMax = DataFormat.max(this.airHourMaxList);
        double airMin = DataFormat.min(this.airHourMinList);
        double airAvg = DataFormat.avg(this.airHourAvgList, 3);
        this.airHourCouList.clear();
        this.airHourMaxList.clear();
        this.airHourMinList.clear();
        this.airHourAvgList.clear();
        double smokeCou = DataFormat.cou(this.smokeHourCouList, 3);
        double smokeMax = DataFormat.max(this.smokeHourMaxList);
        double smokeMin = DataFormat.min(this.smokeHourMinList);
        double smokeAvg = DataFormat.avg(this.smokeHourAvgList, 3);
        this.smokeHourCouList.clear();
        this.smokeHourMaxList.clear();
        this.smokeHourMinList.clear();
        this.smokeHourAvgList.clear();
        double so2Cou = DataFormat.cou(this.so2HourCouList, 3);
        double so2Max = DataFormat.max(this.so2HourMaxList);
        double so2Min = DataFormat.min(this.so2HourMinList);
        double so2Avg = DataFormat.avg(this.so2HourAvgList, 3);
        this.so2HourCouList.clear();
        this.so2HourMaxList.clear();
        this.so2HourMinList.clear();
        this.so2HourAvgList.clear();
        double noxCou = DataFormat.cou(this.noxHourCouList, 3);
        double noxMax = DataFormat.max(this.noxHourMaxList);
        double noxMin = DataFormat.min(this.noxHourMinList);
        double noxAvg = DataFormat.avg(this.noxHourAvgList, 3);
        this.noxHourCouList.clear();
        this.noxHourMaxList.clear();
        this.noxHourMinList.clear();
        this.noxHourAvgList.clear();
        double coCou = DataFormat.cou(this.coHourCouList, 3);
        double coMax = DataFormat.max(this.coHourMaxList);
        double coMin = DataFormat.min(this.coHourMinList);
        double coAvg = DataFormat.avg(this.coHourAvgList, 3);
        this.coHourCouList.clear();
        this.coHourMaxList.clear();
        this.coHourMinList.clear();
        this.coHourAvgList.clear();
        StringBuffer cmd = new StringBuffer("");
        cmd.append("QN=${QN};ST=31;CN=2031;PW=123456;MN=${MN};CP=&&DataTime=${DataTime};");
        cmd.append("B02-Cou=" + airCou + ",B02-Min=" + airMin + ",B02-Max=" + airMax + ",B02-Avg=" + airAvg + ",B02-Flag=N,");
        cmd.append("B02-ZsCou=" + this.getZs(airCou) + ",B02-ZsMin=" + this.getZs(airMin) + ",B02-ZsMax=" + this.getZs(airMax) + ",B02-ZsAvg=" + this.getZs(airAvg) + ";");
        cmd.append("01-Cou=" + smokeCou + ",01-Min=" + smokeMin + ",01-Max=" + smokeMax + ",01-Avg=" + smokeAvg + ",01-Flag=N,");
        cmd.append("01-ZsCou=" + this.getZs(smokeCou) + ",01-ZsMin=" + this.getZs(smokeMin) + ",01-ZsMax=" + this.getZs(smokeMax) + ",01-ZsAvg=" + this.getZs(smokeAvg) + ";");
        cmd.append("02-Cou=" + so2Cou + ",02-Min=" + so2Min + ",02-Max=" + so2Max + ",02-Avg=" + so2Avg + ",02-Flag=N,");
        cmd.append("02-ZsCou=" + this.getZs(so2Cou) + ",02-ZsMin=" + this.getZs(so2Min) + ",02-ZsMax=" + this.getZs(so2Max) + ",02-ZsAvg=" + this.getZs(so2Avg) + ";");
        cmd.append("03-Cou=" + noxCou + ",03-Min=" + noxMin + ",03-Max=" + noxMax + ",03-Avg=" + noxAvg + ",03-Flag=N,");
        cmd.append("03-ZsCou=" + this.getZs(noxCou) + ",03-ZsMin=" + this.getZs(noxMin) + ",03-ZsMax=" + this.getZs(noxMax) + ",03-ZsAvg=" + this.getZs(noxAvg) + ";");
        cmd.append("04-Cou=" + coCou + ",04-Min=" + coMin + ",04-Max=" + coMax + ",04-Avg=" + coAvg + ",04-Flag=N,");
        cmd.append("04-ZsCou=" + this.getZs(coCou) + ",04-ZsMin=" + this.getZs(coMin) + ",04-ZsMax=" + this.getZs(coMax) + ",04-ZsAvg=" + this.getZs(coAvg));
        cmd.append("&&");
        return cmd.toString();
    }

    private double getZs(double rtd) {
        double zs = rtd * 0.5555555555555556D;
        return CommonsUtil.numberFormat(zs, 3);
    }
}